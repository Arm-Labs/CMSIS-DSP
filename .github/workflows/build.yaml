name: Build CMSIS DSP lib, run on VHTs, build documentation and pack
on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]


env:
  ARMLMD_LICENSE_FILE: /opt/data.dat
  ARM_TOOL_VARIANT: ult
  AC6_TOOLCHAIN_6_18_0: /opt/armcompiler/bin
  LD_LIBRARY_PATH: /opt/VHT
  AVH_PATH: /opt/VHT

jobs:
  # pack:
  #   name: Generate pack
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

  #     - name: Fetch tags
  #       if: ${{ github.event_name == 'release' }}
  #       run: |
  #         git fetch --tags --force

  #     - uses: Open-CMSIS-Pack/gen-pack-action@main
  #       with:
  #         doxygen-version: 1.9.2
  #         packchk-version: 1.3.96
  #         gen-doc-script: ./documentation/gen_doc.sh
  #         check-links-script: |
  #           ./documentation/check_links.sh \
  #             ./documentation/html/index.html \
  #             ./documentation
  #         doc-path: ./documentation/html
  #         gen-pack-script: ./gen_pack.sh
  #         gen-pack-output: ./output
  #         gh-pages-branch: gh-pages

  build:
    name: Build and Run
    runs-on: AVH-Runner

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install Python requirements
        run: |
          pip install -U -r Testing/gh/requirements.txt

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: cpp
          queries: security-and-quality

      - name: Install Build tools with ARM Gnu toolchain, packs install build & run
        working-directory: ./Testing
        run: |
        
          . <(curl https://aka.ms/vcpkg-init.sh -L)
          vcpkg activate

      
          mkdir ~/cmsis
          pushd ~/cmsis
          TOP=`pwd`
          echo "TOP is : "
          echo $TOP
          
          wget https://github.com/Open-CMSIS-Pack/cmsis-toolbox/releases/download/1.5.0/cmsis-toolbox-linux-amd64.tar.gz
          tar -zxvf  cmsis-toolbox-linux-amd64.tar.gz 
          sed -i -e '/^set(TOOLCHAIN_ROOT.*/c\set(TOOLCHAIN_ROOT "/opt/armcompiler/bin")' cmsis-toolbox-linux-amd64/etc/AC6.6.18.0.cmake 
          cat cmsis-toolbox-linux-amd64/etc/AC6.6.18.0.cmake
          
          export PATH=$PATH:$TOP/cmsis-toolbox-linux-amd64/bin/
          echo $PATH

          export CMSIS_COMPILER_ROOT=$TOP/cmsis-toolbox-linux-amd64/etc/
          export CMSIS_PACK_ROOT=$TOP/cmsis-pack

          echo "CMSIS_COMPILER_ROOT is : "
          echo $CMSIS_COMPILER_ROOT

          echo "CMSIS_PACK_ROOT is : "
          echo $CMSIS_PACK_ROOT


          wget https://developer.arm.com/-/media/Files/downloads/gnu/12.2.mpacbti-rel1/binrel/arm-gnu-toolchain-12.2.mpacbti-rel1-x86_64-arm-none-eabi.tar.xz
          tar -xf arm-gnu-toolchain-12.2.mpacbti-rel1-x86_64-arm-none-eabi.tar.xz
          echo copy GCC cmake
          cp cmsis-toolbox-linux-amd64/etc/GCC.10.3.1.cmake cmsis-toolbox-linux-amd64/etc/GCC.12.2.1.cmake  
          GNUTOOLSPATH=$TOP/arm-gnu-toolchain-12.2.mpacbti-rel1-x86_64-arm-none-eabi/bin
          ls $GNUTOOLSPATH
          sed -i -e "/^set(TOOLCHAIN_ROOT.*/c\set(TOOLCHAIN_ROOT "${GNUTOOLSPATH}")" cmsis-toolbox-linux-amd64/etc/GCC.12.2.1.cmake 
          sed -i -e '/^set(TOOLCHAIN_VERSION.*/c\set(TOOLCHAIN_VERSION "12.2.1")' cmsis-toolbox-linux-amd64/etc/GCC.12.2.1.cmake 

          $GNUTOOLSPATH/arm-none-eabi-gcc -v
          
          popd

          echo "cpackget : $(which cpackget)"
          echo "csolution: $(which csolution)"
          echo "cbuild   : $(which cbuild)"
          echo "codeql   : $(which codeql)"

          cpackget init https://www.keil.com/pack/index.pidx
          
          echo cpackget update-index 

          cpackget update-index 
          
          ./createDefaultFolder.sh

          echo Preprocess
          python preprocess.py -f desc.txt -o Output.pickle
          python preprocess.py  -f desc_f16.txt -o Output_f16.pickle
          
          echo Process
          python processTests.py -e
          python processTests.py -e -f Output_f16.pickle

          echo cmsis build
          pushd cmsis_build

          csolution list packs -s testac6.csolution.yml -m > required_packs.txt

          cat required_packs.txt
          cpackget add -f required_packs.txt



          echo "${{env.AVH_PATH}}" >> $GITHUB_PATH

          python runall.py -avh /opt/VHT/ -d

          cat summary.html

     

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2



      # - name: Archive results
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: results
      #     path: |
      #       test/arm2d_*.zip
      #     retention-days: 1
      #     if-no-files-found: error
      #   if: always()
